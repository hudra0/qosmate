#!/bin/sh /etc/rc.common
# shellcheck disable=SC2034,SC3043,SC1091,SC2155,SC3020,SC3010,SC2016

update() {
    local force_update=0

    if [ "$QOSMATE_FORCE" = "1" ]; then
        force_update=1
    fi

    local current_backend_version="$(grep '^VERSION=' /etc/qosmate.sh | cut -d'"' -f2)"
    local latest_backend_version="$(wget -qO- "$QOSMATE_BASE_URL/etc/qosmate.sh" | grep '^VERSION=' | cut -d'"' -f2)"
    
    local current_frontend_version="$(grep '^const UI_VERSION' /www/luci-static/resources/view/qosmate/settings.js | cut -d"'" -f2)"
    local latest_frontend_version="$(wget -qO- "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/settings.js" | grep '^const UI_VERSION' | cut -d"'" -f2)"
    
    if [ -z "$latest_backend_version" ] || [ -z "$latest_frontend_version" ]; then
        echo "Error: Could not retrieve the latest versions."
        return 1
    fi
    
    echo "Current backend version: $current_backend_version"
    echo "Latest backend version: $latest_backend_version"
    echo "Current frontend version: $current_frontend_version"
    echo "Latest frontend version: $latest_frontend_version"
    
    if [ "$force_update" -eq 0 ]; then
        if [ "$current_backend_version" = "$latest_backend_version" ] && [ "$current_frontend_version" = "$latest_frontend_version" ]; then
            echo "Both backend and frontend are up to date."
            return 0
        fi
    else
        echo "Force update enabled. Proceeding with update even if versions are identical."
    fi
    
    echo "Updates available. Do you want to update? [y/N] "
    read answer
    if [ "$answer" != "y" ] && [ "$answer" != "Y" ]; then
        echo "Update cancelled."
        return 0
    fi
    
    echo "Updating QoSmate..."
    
    # Update backend
    if [ "$force_update" -eq 1 ] || [ "$current_backend_version" != "$latest_backend_version" ]; then
        echo "Updating backend..."
        if wget -O /etc/qosmate.sh "$QOSMATE_BASE_URL/etc/qosmate.sh" && \
           wget -O /etc/init.d/qosmate "$QOSMATE_BASE_URL/etc/init.d/qosmate" && \
           wget -O /etc/hotplug.d/iface/13-qosmateHotplug "$QOSMATE_BASE_URL/etc/hotplug.d/iface/13-qosmateHotplug"; then
            chmod +x /etc/qosmate.sh /etc/init.d/qosmate
            echo "Backend update complete."
        else
            echo "Backend update failed."
            return 1
        fi
    fi
    
    # Update frontend
    if [ "$force_update" -eq 1 ] || [ "$current_frontend_version" != "$latest_frontend_version" ]; then
        echo "Updating frontend..."
        if  wget -O /www/luci-static/resources/view/qosmate/settings.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/settings.js" && \
            wget -O /www/luci-static/resources/view/qosmate/hfsc.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/hfsc.js" && \
            wget -O /www/luci-static/resources/view/qosmate/cake.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/cake.js" && \
            wget -O /www/luci-static/resources/view/qosmate/advanced.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/advanced.js" && \
            wget -O /www/luci-static/resources/view/qosmate/rules.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/rules.js" && \
            wget -O /www/luci-static/resources/view/qosmate/connections.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/connections.js" && \
            wget -O /www/luci-static/resources/view/qosmate/custom_rules.js "$QOSMATE_FRONTEND_BASE_URL/htdocs/luci-static/resources/view/custom_rules.js" && \
            wget -O /usr/share/luci/menu.d/luci-app-qosmate.json "$QOSMATE_FRONTEND_BASE_URL/root/usr/share/luci/menu.d/luci-app-qosmate.json" && \
            wget -O /usr/share/rpcd/acl.d/luci-app-qosmate.json "$QOSMATE_FRONTEND_BASE_URL/root/usr/share/rpcd/acl.d/luci-app-qosmate.json" && \
            wget -O /usr/libexec/rpcd/luci.qosmate "$QOSMATE_FRONTEND_BASE_URL/root/usr/libexec/rpcd/luci.qosmate"; then
            chmod +x /usr/libexec/rpcd/luci.qosmate
            echo "Frontend update complete."
            /etc/init.d/rpcd restart
            /etc/init.d/uhttpd restart
        else
            echo "Frontend update failed."
            return 1
        fi
    fi
    expand_config
    
    echo "Update complete. Please restart QoSmate."
    /etc/init.d/qosmate restart
}

pkg_manager="$(detect_package_manager)" # global variable
